#In this project, we are going to make a table with a small set of “Billionares people”, then make more tables about things they do and join those to create nice human readable lists. 

CREATE TABLE billionares (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    fullname TEXT,
    age INTEGER,
    nationality TEXT);
    
INSERT INTO billionares (fullname, age, nationality) VALUES ("Jeff Bezos", 54, "US");
INSERT INTO billionares (fullname, age, nationality) VALUES ("Bill Gates", 62, "US");
INSERT INTO billionares (fullname, age, nationality) VALUES ("Warren Buffet", 87, "US");
INSERT INTO billionares (fullname, age, nationality) VALUES ("Bernard Arnault", 69, "France");
INSERT INTO billionares (fullname, age, nationality) VALUES ("Mark Zucherberg", 33, "US");

CREATE table wealth (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    billionare_id INTEGER,
    net_worth TEXT,
    source_wealth TEXT);
    
INSERT INTO wealth (billionare_id, net_worth, source_wealth) VALUES (1, "112 billion", "Amazon");
INSERT INTO wealth (billionare_id, net_worth, source_wealth) VALUES (2, "90 billion", "Microsoft");
INSERT INTO wealth (billionare_id, net_worth, source_wealth) VALUES (3, "84 billion", "Berkshire Hathaway");
INSERT INTO wealth (billionare_id, net_worth, source_wealth) VALUES (4, "72 billion", "LVMH");
INSERT INTO wealth (billionare_id, net_worth, source_wealth) VALUES (5, "71 billion", "Facebook");

# Analysis 

--Return total net worth for each billionare:
SELECT billionares.fullname, wealth.net_worth
FROM billionares
JOIN wealth
ON billionares.id = wealth.billionare_id;

--Query to retrieve billionaire information along with their net worth and source of wealth:
SELECT b.fullname AS Billionaire_Name, b.age AS Age, b.nationality AS Nationality, w.net_worth AS Net_Worth, w.source_wealth AS Source_of_Wealth
FROM billionares b
INNER JOIN wealth w ON b.id = w.billionare_id;

--Retrieve the top 3 billionaires by net worth:
SELECT b.fullname AS Billionaire_Name, b.age AS Age, b.nationality AS Nationality, w.net_worth AS Net_Worth, w.source_wealth AS Source_of_Wealth
FROM billionares b
INNER JOIN wealth w ON b.id = w.billionare_id
ORDER BY CAST(REPLACE(w.net_worth, ' billion', '') AS INTEGER) DESC
LIMIT 3;

--Find the average age of billionaires:
SELECT AVG(age) AS Average_Age_of_Billionaires
FROM billionares;

--Find the total net worth of billionaires:
SELECT SUM(CAST(REPLACE(net_worth, ' billion', '') AS INTEGER)) AS Total_Net_Worth_in_Billions
FROM wealth;

--Count the number of billionaires from each nationality: 
SELECT nationality, COUNT(*) AS Number_of_Billionaires
FROM billionares
GROUP BY nationality;

--Retrieve billionaires who have a net worth greater than the average net worth of all billionaires:
SELECT b.fullname AS Billionaire_Name, b.age AS Age, b.nationality AS Nationality, w.net_worth AS Net_Worth, w.source_wealth AS Source_of_Wealth
FROM billionares b
INNER JOIN wealth w ON b.id = w.billionare_id
WHERE CAST(REPLACE(w.net_worth, ' billion', '') AS INTEGER) > (
    SELECT AVG(CAST(REPLACE(net_worth, ' billion', '') AS INTEGER))
    FROM wealth);

--How can these results answer business problems or help a business out? 
--Analyzing billionaire data can offer businesses valuable insights such as identifying potential markets, investment opportunities, strategic partnerships, and talent acquisition. 
It also helps in tailoring marketing strategies, benchmarking performance, and understanding broader economic trends. 
